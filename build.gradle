import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
	id 'application'
}

group 'com.saksham4106'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

project.ext.lwjglVersion = "3.3.1"
project.ext.jomlVersion = "1.10.4"

if(DefaultNativePlatform.currentOperatingSystem.isWindows()){
    project.ext.lwjglNatives = "natives-windows"
}else{
    project.ext.lwjglNatives = "natives-linux"
}


dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'


    implementation("ch.qos.logback:logback-classic:1.2.11")
    implementation group: 'org.json', name: 'json', version: '20220320'


    //implementation fileTree('libs') { include '*.jar' }


    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-nfd"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    implementation "org.joml:joml:${jomlVersion}"
}

jar {
    manifest {
        attributes(
                'Main-Class': 'Main',
        )
    }
}

application {
	mainClass = 'Main'
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    archiveClassifier = 'all'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    with jar
}
sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

